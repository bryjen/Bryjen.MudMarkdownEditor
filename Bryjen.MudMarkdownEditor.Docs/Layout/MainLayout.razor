@inherits LayoutComponentBase

<MudThemeProvider Theme="@MudTheme" IsDarkMode="@m_isDarkMode"/>
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />


<div class="page mud-layout">
     <main>
        <MudLayout>
            <MudAppBar Elevation="1" Dense="true">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" 
                               Class="mr-6"/>
                <div alt="Flat Earthers Logo" class="logo mx-2"></div>
                <MudText Typo="Typo.body1" Class="mx-2">Flat Earthers</MudText>
                
                <MudSpacer/>

                <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle"
                               Class="mx-2"/>
                
                
                <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>
            </MudAppBar>
            <MudDrawer Open ClipMode="DrawerClipMode.Never" Elevation="1">
                <NavMenu/>
            </MudDrawer>
            <MudMainContent>
                @Body
            </MudMainContent>
        </MudLayout>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>



@code {

    private bool m_isDarkMode = true;
    

    private void DarkModeToggle()
    {
        m_isDarkMode = !m_isDarkMode;
    }

    public string DarkLightModeButtonIcon =>
        m_isDarkMode switch
        {
            true => Icons.Material.Outlined.DarkMode,
            false => Icons.Material.Rounded.AutoMode,
        };

    
    private MudTheme? m_mudTheme;
    public MudTheme MudTheme
    {
        get
        {
            m_mudTheme ??= new() { PaletteLight = _lightPalette, PaletteDark = _darkPalette, LayoutProperties = new LayoutProperties(), Typography = m_typography };
            return m_mudTheme;
        }
        set => m_mudTheme = value;
    }

    public bool IsDarkMode { get; set; } = true;

    private readonly Typography m_typography = new() { Default = new Default { FontFamily = ["JetBrains Mono", "monospace"] } };

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

}
